<template>
  <div class="page">
    <stack>
      <scroll
        class="content horizontal-center"
        style="padding-bottom: 12px;"
        scroll-y="true"
        bounces="true"
        @scroll="updateHighlightLength"
      >
        <img src="/common/assets/about_bg.png"/>
        <div style="width: 100%" class="horizontal-center">
          <text class="component-about-titleText">澄序课程表</text>
          <text class="component-about-titleVersion" onclick="onVersionClick">
            v{{ version }}
          </text>
        </div>

        <div class="gap-480"></div>

        <div class="component-about-textCard vertical-left">
          <text class="component-about-textContent-textSubTitle">主要参与开发的人员</text>
          <div class="gap-20"></div>
          <text class="component-about-textContent-text">@蠢鱼Yulimfish</text>
          <text class="component-about-textContent-text">@NEORUAA</text>
          <text class="component-about-textContent-text">@Eason chen</text>
          <text class="component-about-textContent-text">@绫凌子Rinko</text>
          <div class="gap-240"></div>
          <text class="component-about-textContent-textS">本应用灵感来源于</text>
          <text class="component-about-textContent-textS">米坛社区「环间课表」,</text>
          <text class="component-about-textContent-textS">感谢他们做出</text>
          <text class="component-about-textContent-textS">如此好用的环上应用</text>
          <div class="gap-120"></div>
          <text class="component-about-textContent-textS">UI设计参考来自@无源流沙，</text>
          <text class="component-about-textContent-textS">感谢(人´v`)</text>
          <div class="gap-120"></div>
          <text class="component-about-textContent-textS">感谢</text>
          <text class="component-about-textContent-textS">@过客是个铁憨憨/@藻钠Zaona</text>
          <text class="component-about-textContent-textS">为本应用UI提出宝贵的修改建议</text>
          <div class="gap-120"></div>
          <text class="component-about-textContent-textS">感谢</text>
          <text class="component-about-textContent-textS">@乐色桶 帮助我解决通信问题</text>
          <text class="component-about-textContent-textS">@冬灰条 帮助我解决异步问题</text>
          <div class="gap-120"></div>
          <text class="component-about-textContent-textS">感谢你愿意来使用</text>
          <text class="component-about-textContent-textS">这个没啥意思的小应用</text>
          <text class="component-about-textContent-textS">愿它可以陪伴你的学习生活～</text>
        </div>

        <div class="gap-80"></div>

        <div class="component-button" onclick="toAfd()">
          <text class="component-text">赞助支持</text>
        </div>

        <div class="gap-80"></div>

        <div class="component-button" onclick="toDetail()">
          <text class="component-text">版本详情</text>
        </div>
        
      </scroll>
      <img src="/common/assets/nav-bg.png" style="opacity:{{navOpacity}}" />
      <div class="component-nav-noback">
        <div class="component-nav-backGroup" onclick="exit">
          <img src="/common/assets/back_button.png" class="component-nav-backButton" />
          <text class="component-nav-title-text-backb">{{ title }}</text>
        </div>
        <text class="component-nav-title-time">{{ time }}</text>
      </div>
    </stack>
  </div>
</template>

<script>
export default {
  private: {
    title: "关于",
    time: "",
    version: "0.4.1 - Beta",
    timer: null,
    eggClickCount: 0,
    navOpacity: 0,
  },

  updateHighlightLength(event) {
    let {scrollY} = event
    if (scrollY >= 270 && scrollY > 0) {
      this.navOpacity = 1
    } else {
      this.navOpacity = 0
    }
  },

  onShow() {
    ;(this.time = this.$app.$def.timeUpdate.updateTime().time),
      (this.timer = this.$app.$def.timeUpdate.updateTimePerminute((timeData) => {
        this.time = timeData.time
      }))
  },

  onDestroy() {
    this.$app.$def.timeUpdate.stopTimer(this.timer) // 清除定时器，防止内存泄漏
  },
  onHide() {
    this.$app.$def.timeUpdate.stopTimer(this.timer) // 清除定时器，防止内存泄漏
  },

  exit() {
    this.$app.$def.router.push({
      uri: "pages/entries",
      params: {
        ___PARAM_LAUNCH_FLAG___: "clearTask"
      }
    })
  },

  toAfd() {
    this.$app.$def.router.push({
      uri: "pages/about/afd"
    })
  },

  toDetail() {
    this.$app.$def.router.push({
      uri: "pages/about/details"
    })
  },

  onVersionClick() {
    this.eggClickCount++
    if (this.eggClickCount === 5) {
      this.$app.$def.router.push({
        uri: "pages/EGG"
      })
      this.eggClickCount = 0
    }
  },

  onBackPress() {
    this.$app.$def.router.push({
      uri: "pages/entries",
      params: {
        ___PARAM_LAUNCH_FLAG___: "clearTask"
      }
    })
    return true
  }
}
</script>

<style>
@import "../../common/style/universal.css";
@import "../../common/style/component.css";
.content {
  width: 336px;
  height: 480px;

  display: flex;
  flex-direction: column;

  scroll-snap-type: y cross;
}
.scroll-content {
  width: 336px;
  height: 1680px;
  display: flex;
  flex-direction: column;
  padding: 0px;
}

/* 头部标题logo */
.component-about-title {
  position: absolute;
  height: 327px;
}
.component-about-titleLogo {
  width: 118px;
  height: 118px;
}
.component-about-titleText {
  font-size: 30px;
  font-weight: 700;
  letter-spacing: 0px;
  line-height: 39.78px;
  color: rgba(255, 255, 255, 1);
  text-align: center;
}
.component-about-titleVersion {
  font-size: 18px;
  font-weight: 400;
  letter-spacing: 0px;
  line-height: 23.87px;
  color: rgba(255, 255, 255, 0.6);
  text-align: center;
}

/* 感谢描述 */
.component-about-textCard {
  width: 312px;
  opacity: 1;
  border-radius: 30px;
  background-color: rgba(255, 255, 255, 0.1);
  display: flex;
  flex-direction: column;
  padding: 12px;
}
.component-about-textContent-textSubTitle {
  font-size: 32px;
  font-weight: 500;
  letter-spacing: 0px;
  line-height: 44.8px;
  color: rgba(255, 255, 255, 0.6);
  text-align: left;
}
.component-about-textContent-text {
  font-size: 32px;
  font-weight: 500;
  letter-spacing: 0px;
  line-height: 44.8px;
  color: rgba(255, 255, 255, 1);
  text-align: left;
}
.component-about-textContent-textS {
  font-size: 20px;
  font-weight: 500;
  letter-spacing: 0px;
  color: rgba(255, 255, 255, 0.6);
  white-space: pre-line;
  flex-wrap: wrap;
}
</style>
