<template>
    <div class="page">
      <div class="component-nav">
        <text class="component-nav-title-text" onclick="exit">< {{ title }}</text>
        <text class="component-nav-title-time">{{ time }}</text>
      </div>
      
      <div class="gap-110"></div>

      <div if="{{!loding}}">
        <text class="component-allCourses-title" onclick="dayDown"><</text>

        <text class="component-allCourses-title">{{ weekNum }}</text>

        <text class="component-allCourses-title" onclick="dayUp">></text>
      </div>

      <div class="gap-80"></div>

      <scroll class="component-allCourses-list" scroll-y="true" bounces="true">
        <div if="{{loding}}">
          <text class="component-coursePresentations-courses">加载中....</text>
        </div>

        <div if="{{!loding}}" for="{{courseSchedule}}">
            <div class="component-coursePresentations-border" if="{{$item.type === 'course'}}">
              <div class="component-coursePresentations-content">
              <div class="gap-142"></div>
              <text class="component-coursePresentations-text">{{ $item.description }}</text>
              <text class="component-coursePresentations-courses">{{ $item.courseName }}</text>
              <div class="gap-80"></div>
              <text class="component-coursePresentations-text">{{ $item.timeRange }}</text>
              <text class="component-coursePresentations-text">{{ $item.courseRoom }}</text>
              <text class="component-coursePresentations-text">{{ $item.courseTeacher }}</text>
            </div>
          </div>
        </div>
        <div class="component-coursePresentations-border" if="{{ (!courseSchedule || courseSchedule.length === 0) && !loding}}">
          <div class="component-coursePresentations-content">
            <div class="gap-142"></div>
            <text class="component-coursePresentations-courses">无课程数据</text>
          </div>
        </div>
        
      </scroll>

    </div>
  </template>
  
  <script>
  export default {
    private: {
      dayNum: "",
      weekNum: "",
      dayMap : [
        {en: 'Sun', zh: '周日'},
        {en: 'Mon', zh: '周一'},
        {en: 'Tue', zh: '周二'},
        {en: 'Wed', zh: '周三'},
        {en: 'Thu', zh: '周四'},
        {en: 'Fri', zh: '周五'},
        {en: 'Sat', zh: '周六'}
      ],

      title: "全部课程",
      time: "",
      timer: null,
  
      courseSchedule: [],
      loding: true,
    },
  
    onShow() {

      const dayIndex = new Date().getDay();
      this.dayNum = this.dayMap[dayIndex].en;
      this.weekNum = this.dayMap[dayIndex].zh

      ;(this.time = this.$app.$def.timeUpdate.updateTime().time),
        (this.timer = this.$app.$def.timeUpdate.updateTimePerminute((timeData) => {
          this.time = timeData.time
        }))
  
      this.loding = true;
      this.courseSchedule = this.$app.$def.courseDataParse.getCourseSchedule(this.dayNum);
      this.loding = false;
    },
  
    onDestroy() {
      this.$app.$def.timeUpdate.stopTimer(this.timer) // 清除定时器，防止内存泄漏
    },
    onHide() {
      this.$app.$def.timeUpdate.stopTimer(this.timer) // 清除定时器，防止内存泄漏
    },
  
    dayDown() {
      console.log(!this.loding);
      const currentIndex = this.dayMap.findIndex(item => item.en === this.dayNum);
      const prevIndex = (currentIndex - 1 + 7) % 7;
      this.dayNum = this.dayMap[prevIndex].en;
      this.weekNum = this.dayMap[prevIndex].zh;

      this.loding = true;
      this.courseSchedule = this.$app.$def.courseDataParse.getCourseSchedule(this.dayNum);
      this.loding = false;
    }, 
    dayUp() {
      const currentIndex = this.dayMap.findIndex(item => item.en === this.dayNum);
      const nextIndex = (currentIndex + 1) % 7;
      this.dayNum = this.dayMap[nextIndex].en;
      this.weekNum = this.dayMap[nextIndex].zh;
      
      this.loding = true;
      this.courseSchedule = this.$app.$def.courseDataParse.getCourseSchedule(this.dayNum);
      this.loding = false;
    },

    // getCourse() {
    //   this.courseSchedule = this.$app.$def.courseDataParse.getCourseSchedule(this.dayNum);
    //   this.loding = false;
    // },

    exit() {
      this.$app.$def.router.back()
    }
  }
  </script>
  
  <style>
  @import "../../../common/css/universal.css";
  @import "../../../common/css/nav.css";
  
  .component-allCourses-list {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    margin-bottom: 30px;
    width: 324px;
    height: 404.4px;
  
    scroll-snap-align: start;
  }

  .component-allCourses-title {
    opacity: 1;
    font-size: 24px;
    font-weight: 550;
    letter-spacing: 0px;
    line-height: 31.82px;
    color: rgba(255, 255, 255, 0.6);
    text-align: left;
    vertical-align: top;
  }
  
  .component-coursePresentations-weekNumText {
    font-size: 18px;
    font-weight: 600;
    letter-spacing: 0px;
    line-height: 23.87px;
    color: rgba(255, 255, 255, 0.6);
    text-align: center;
    vertical-align: top;
  }
  
  .component-coursePresentations-border {
    display: flex;
    justify-content: center;
    align-items: center;
  
    width: 318px;
    height: 185px;
  }
  
  .component-coursePresentations-content {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
  
    left: 0px;
    top: 0px;
    width: 318px;
    height: 177px;
    opacity: 1;
    border-radius: 36px;
    background-color: rgba(38, 38, 38, 1);
  }
  
  .component-coursePresentations-text {
    left: 19px;
    opacity: 1;
    font-size: 20px;
    font-weight: 550;
    letter-spacing: 0px;
    line-height: 26.52px;
    color: rgba(255, 255, 255, 0.6);
    text-align: left;
    vertical-align: top;
  }
  
  .component-coursePresentations-courses {
    left: 19px;
    opacity: 1;
    font-size: 32px;
    font-weight: 550;
    letter-spacing: 0px;
    line-height: 42.43px;
    color: rgba(255, 255, 255, 1);
    text-align: left;
    vertical-align: top;
  }
  </style>
  
