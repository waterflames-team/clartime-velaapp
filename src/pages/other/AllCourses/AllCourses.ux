<template>
  <div class="page">
    <div class="component-nav">
      <text class="component-nav-title-text" onclick="exit">< {{ title }}</text>
      <text class="component-nav-title-time">{{ time }}</text>
    </div>
    <div class="gap-110"></div>
    <div class="component-indicator" id="indicator"><div style="width: {{ indicatorHighlight_width }};left :{{ indicatorHighlight_left }};" class="component-indicator-highlight" id="indicator_highlight" ></div></div>
    <div class="gap-36"></div>

    <scroll class="component-allCourses-show" id="scroll" scroll-y="false" scroll-x="true" if="{{ !ChangeIntoList }}" @scroll="updateHighlightLength">
      <scroll class="component-allCourses-list">
        <div class="gap-36"></div>
        <text class="component-allCourses-text">周一</text>

        <div class="component-coursePresentations-border">
          <div class="component-coursePresentations-content">
            <div class="gap-142"></div>
            <text class="component-coursePresentations-text">上午第1节课</text>
            <text class="component-coursePresentations-courses">{{ coursesName }}</text>
            <div class="gap-80"></div>
            <text class="component-coursePresentations-text">{{ coursesStartTime }}</text>
            <text class="component-coursePresentations-text">{{ coursesClassroom }}</text>
            <text class="component-coursePresentations-text">{{ coursesTeacher }}</text>
          </div>
        </div>
      </scroll>
      <scroll class="component-allCourses-list">
        <div class="gap-36"></div>
        <text class="component-allCourses-text">周二</text>

        <div class="component-coursePresentations-border">
          <div class="component-coursePresentations-content">
            <div class="gap-142"></div>
            <text class="component-coursePresentations-text">上午第1节课</text>
            <text class="component-coursePresentations-courses">{{ coursesName }}</text>
            <div class="gap-80"></div>
            <text class="component-coursePresentations-text">{{ coursesStartTime }}</text>
            <text class="component-coursePresentations-text">{{ coursesClassroom }}</text>
            <text class="component-coursePresentations-text">{{ coursesTeacher }}</text>
          </div>
        </div>
      </scroll>
      <scroll class="component-allCourses-list">
        <div class="gap-36"></div>
        <text class="component-allCourses-text">周三</text>

        <div class="component-coursePresentations-border">
          <div class="component-coursePresentations-content">
            <div class="gap-142"></div>
            <text class="component-coursePresentations-text">上午第1节课</text>
            <text class="component-coursePresentations-courses">{{ coursesName }}</text>
            <div class="gap-80"></div>
            <text class="component-coursePresentations-text">{{ coursesStartTime }}</text>
            <text class="component-coursePresentations-text">{{ coursesClassroom }}</text>
            <text class="component-coursePresentations-text">{{ coursesTeacher }}</text>
          </div>
        </div>
      </scroll>
      <scroll class="component-allCourses-list">
        <div class="gap-36"></div>
        <text class="component-allCourses-text">周四</text>

        <div class="component-coursePresentations-border">
          <div class="component-coursePresentations-content">
            <div class="gap-142"></div>
            <text class="component-coursePresentations-text">上午第1节课</text>
            <text class="component-coursePresentations-courses">{{ coursesName }}</text>
            <div class="gap-80"></div>
            <text class="component-coursePresentations-text">{{ coursesStartTime }}</text>
            <text class="component-coursePresentations-text">{{ coursesClassroom }}</text>
            <text class="component-coursePresentations-text">{{ coursesTeacher }}</text>
          </div>
        </div>
      </scroll>
      <scroll class="component-allCourses-list">
        <div class="gap-36"></div>
        <text class="component-allCourses-text">周五</text>

        <div class="component-coursePresentations-border">
          <div class="component-coursePresentations-content">
            <div class="gap-142"></div>
            <text class="component-coursePresentations-text">上午第1节课</text>
            <text class="component-coursePresentations-courses">{{ coursesName }}</text>
            <div class="gap-80"></div>
            <text class="component-coursePresentations-text">{{ coursesStartTime }}</text>
            <text class="component-coursePresentations-text">{{ coursesClassroom }}</text>
            <text class="component-coursePresentations-text">{{ coursesTeacher }}</text>
          </div>
        </div>
      </scroll>
  
    </scroll>
  </div>
</template>

<script>
import router from "@system.router"

export default {
  private: {
    title: "全部课程",
    time: "",
    timer: null,
    ChangeIntoList: false,

    indicatorWidth: 0,
    highlightWidth: 50,
    scrollWidth:0,
    indicatorHighlight_width:"10px",
    indicatorHighlight_left:"0px",

    coursesName: "语文",
    coursesStartTime: "16:35 - 17:20",
    coursesClassroom: "101教室",
    coursesTeacher: "张老师"
  },

  onInit() {
    this.updateTime()
    this.timer = setInterval(() => this.updateTime(), 60000) // 每分调用一次 updateTime
  },

  onShow() {
    this.HowWideScroll().then(() => {
      this.createHighlightLength(5);
    }).catch(err => {
      console.error('Error in onShow:', err);
    });
  },

  onDestroy() {
    clearInterval(this.timer) // 清除定时器，防止内存泄漏
  },

  updateTime() {
    const now = new Date()
    const hours = String(now.getHours()).padStart(2, "0")
    const minutes = String(now.getMinutes()).padStart(2, "0")
    this.time = `${hours}:${minutes}`
  },

  exit() {
    router.back()
  },
  change() {
    this.ChangeIntoList = !this.ChangeIntoList
  },

  HowWideScroll() {
    return new Promise((resolve, reject) => {
      this.$element('scroll').getScrollRect({
        success: ({ width, height }) => {
          this.scrollWidth = width;
          resolve();
        },
        fail: (err) => {
          console.error('Failed to get scroll rect:', err);
          reject(err);
        }
      });
    });
  },

  createHighlightLength(howManyDays=5) {
    return new Promise((resolve, reject) => {
      // 获取元素
      const indicator = this.$element('indicator');

      indicator.getBoundingClientRect({
        success: (data) => {
          this.indicatorWidth = data.width;
          this.highlightWidth = this.indicatorWidth / howManyDays * 2; // 修正变量作用域
          this.indicatorHighlight_width = `${this.highlightWidth}px`; // 更新 indicatorHighlight_width 的值
          resolve();
        },
        fail: (err) => {
          console.error('Failed to get bounding rect:', err);
          reject(err);
        }
      });
    });
  },

  updateHighlightLength(event) {
    const { scrollX, scrollY } = event;
    this.indicatorHighlight_left =  `${(this.indicatorWidth-this.highlightWidth) * scrollX / (this.scrollWidth-324)}px`;
    console.log("-----");
    console.log(this.indicatorWidth-this.highlightWidth);
    console.log(scrollX);
    console.log(this.scrollWidth);
    console.log(this.indicatorHighlight_left);
  }
}
</script>

<style>
@import "../../../common/css/universal.css";
@import "../../../common/css/nav.css";

/* 指示器 */
.component-indicator{
  align-items: center;
  width: 100px;
  height: 10px;
  opacity: 1;
  border-radius: 30px;
  background-color: #262626;
}
.component-indicator-highlight{
  height: 9px;
  opacity: 1;
  border-radius: 30px;
  background-color: #ffffff;
}

/* 列表展示 */
.component-allCourses-show {
  width: 100%;
  height: 404.4px;

  scroll-snap-type: x cross;
  scroll-snap-stop: always;
}

.component-allCourses-list {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  margin-bottom: 30px;
  width: 324px;
  height: 404.4px;
  

  scroll-snap-align: start 
}

.component-allCourses-text {
  width: 182px;
  height: 24px;
  opacity: 1;

  font-size: 18px;
  font-weight: 600;
  letter-spacing: 0px;
  line-height: 23.87px;
  color: rgba(255, 255, 255, 0.6);
  text-align: center;
  vertical-align: top;
}

.component-coursePresentations-border {
  display: flex;
  justify-content: center;
  align-items: center;

  width: 318px;
  height: 185px;
}

.component-coursePresentations-content {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;

  left: 0px;
  top: 0px;
  width: 318px;
  height: 177px;
  opacity: 1;
  border-radius: 36px;
  background-color: rgba(38, 38, 38, 1);
}

.component-coursePresentations-text {
  left: 19px;
  opacity: 1;
  font-size: 20px;
  font-weight: 550;
  letter-spacing: 0px;
  line-height: 26.52px;
  color: rgba(255, 255, 255, 0.6);
  text-align: left;
  vertical-align: top;
}

.component-coursePresentations-courses {
  left: 19px;
  opacity: 1;
  font-size: 32px;
  font-weight: 550;
  letter-spacing: 0px;
  line-height: 42.43px;
  color: rgba(255, 255, 255, 1);
  text-align: left;
  vertical-align: top;
}
</style>