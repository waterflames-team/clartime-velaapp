<template>
    <div class="page">
        <div class="component-nav">
            <div class="component-nav-button" onclick="exit">
              <image class="component-nav-back" src="/common/Back.png" />
            </div>
            <div class="component-nav-title">
              <text class="component-nav-title-time">{{ title_time }}</text>
              <text class="component-nav-title-text">{{ title }}</text>
            </div>
            <div class="component-nav-button_change" onclick="change">
              <image class="component-nav-List" src="/common/icon_List.png" if="{{ !ChangeIntoList }}"/>
              <image class="component-nav-Calendar" src="/common/icon_Calendar.png" else/>
            </div>
        </div>

        <swiper class="component-allCourses-show" if="{{ !ChangeIntoList }}">
          
          <scroll class="component-allCourses-list" bounces="true" scroll-y="true">
            
            <div class="gap-36"></div>
            <text class="component-allCourses-text">周一</text>

            <div class="component-coursePresentations-border">
              <div class="component-coursePresentations-content">
                <div class="gap-142"></div>
                <text class="component-coursePresentations-text">上午第1节课</text>
                <text class="component-coursePresentations-courses">{{ coursesName }}</text>
                <div class="gap-8"></div>
                <text class="component-coursePresentations-text">{{ coursesStartTime }}</text>
                <text class="component-coursePresentations-text">{{ coursesClassroom }}</text>
                <text class="component-coursePresentations-text">{{ coursesTeacher }}</text>
              </div>
            </div>

            <div class="component-coursePresentations-border">
              <div class="component-coursePresentations-content">
                <div class="gap-142"></div>
                <text class="component-coursePresentations-text">上午第2节课</text>
                <text class="component-coursePresentations-courses">{{ coursesName }}</text>
                <div class="gap-8"></div>
                <text class="component-coursePresentations-text">{{ coursesStartTime }}</text>
                <text class="component-coursePresentations-text">{{ coursesClassroom }}</text>
                <text class="component-coursePresentations-text">{{ coursesTeacher }}</text>
              </div>
            </div>

          </scroll>
          <scroll class="component-allCourses-list" bounces="true" scroll-y="true">
            
            <div class="gap-36"></div>
            <text class="component-allCourses-text">周二</text>

            <div class="component-coursePresentations-border">
              <div class="component-coursePresentations-content">
                <div class="gap-142"></div>
                <text class="component-coursePresentations-text">上午第1节课</text>
                <text class="component-coursePresentations-courses">{{ coursesName }}</text>
                <div class="gap-8"></div>
                <text class="component-coursePresentations-text">{{ coursesStartTime }}</text>
                <text class="component-coursePresentations-text">{{ coursesClassroom }}</text>
                <text class="component-coursePresentations-text">{{ coursesTeacher }}</text>
              </div>
            </div>

          </scroll>

        </swiper>
        <swiper class="component-allCourses-show" else>

        </swiper>
          
    </div>
</template>

<script>
import router from "@system.router"

export default {
  private: {
    title: "全部课程",
    title_time: "",
    timer: null,
    ChangeIntoList: false,

    coursesName: "语文",
    coursesStartTime: "16:35 - 17:20",
    coursesClassroom: "101教室",
    coursesTeacher: "张老师",
  },
  
  onInit() {
    this.updateTime() // 初始化时调用一次 updateTime
    this.timer = setInterval(() => this.updateTime(), 60000) // 每秒调用一次 updateTime
  },

  onDestroy() {
    clearInterval(this.timer) // 清除定时器，防止内存泄漏
  },

  updateTime() {
    const now = new Date()
    const hours = String(now.getHours()).padStart(2, "0")
    const minutes = String(now.getMinutes()).padStart(2, "0")
    // const Seconds = String(now.getSeconds()).padStart(2, "0")
    this.title_time = `${hours}:${minutes}`
  },

  exit() {
    router.back()
  },
  change() {
    this.ChangeIntoList = !this.ChangeIntoList
  }
}
</script>

<style>
@import "../../../common/css/universal.css";
@import "../../../common/css/nav.css";
.component-nav-button_change{
  left: 0px;
  top: 0px;
  width: 72px;
  height: 72px;
  opacity: 1;
  border-radius: 36px;
  background-color: rgba(13, 110, 255, 0.8);
  border: 3px solid rgba(255, 255, 255, 0.06);

  justify-content: center;
  align-items: center;
}
.component-nav-List{
  /* left: 25px;
  top: 22px; */
  width: 23px;
  height: 29px;
  opacity: 1;
}
.component-nav-Calendar{
  /* left: 21px;
  top: 20px; */
  width: 31px;
  height: 31px;
  opacity: 1;
}
.component-allCourses-show{
  width: 100%;
  height: 390px;

  display: flex;
  justify-content: center;
  align-items: center;

  indicator-top: 0px;
  indicator-color: rgba(255, 255, 255, 0.2);
  indicator-selected-color: rgba(255, 255, 255, 1);
  indicator-size: 5px;
}
.component-allCourses-list{
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  margin-bottom: 30px;
  width: 330px;
  height: 360px;
}
.component-allCourses-text{
  left: 0px;
  top: 3.6px;
  width: 182px;
  height: 24px;
  opacity: 1;

  font-size: 18px;
  font-weight: 600;
  letter-spacing: 0px;
  line-height: 23.87px;
  color: rgba(255, 255, 255, 0.6);
  text-align: center;
  vertical-align: top;
}
.component-coursePresentations-border {
  display: flex;
  justify-content: center;
  align-items: center;

  width: 324px;
  height: 185px;
}

.component-coursePresentations-content {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  
  left: 0px;
  top: 0px;
  width: 324px;
  height: 177px;
  opacity: 1;
  border-radius: 36px;
  background-color: rgba(38, 38, 38, 1);
}

.component-coursePresentations-text {
  left: 19px;
  opacity: 1;
  font-size: 20px;
  font-weight: 550;
  letter-spacing: 0px;
  line-height: 26.52px;
  color: rgba(255, 255, 255, 0.6);
  text-align: left;
  vertical-align: top;
}
.component-coursePresentations-courses {
  left: 19px;
  opacity: 1;
  font-size: 32px;
  font-weight: 550;
  letter-spacing: 0px;
  line-height: 42.43px;
  color: rgba(255, 255, 255, 1);
  text-align: left;
  vertical-align: top;
}
</style>