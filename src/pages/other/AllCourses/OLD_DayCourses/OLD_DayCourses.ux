<template>
  <div class="page">
    <div class="component-nav">
      <text class="component-nav-title-text" onclick="exit">< {{ weeknum }}</text>
      <text class="component-nav-title-time">{{ time }}</text>
    </div>
    <div class="gap-110"></div>

    <scroll class="component-allCourses-list" scroll-y="true" bounces="true">
      <div for="{{courseSchedule}}">
        <div class="component-coursePresentations-border" if="{{$item.type === 'course'}}">
          <div class="component-coursePresentations-content">
            <div class="gap-142"></div>
            <text class="component-coursePresentations-text">{{ $item.description }}</text>
            <text class="component-coursePresentations-courses">{{ $item.courseName }}</text>
            <div class="gap-80"></div>
            <text class="component-coursePresentations-text">{{ $item.timeRange }}</text>
            <text class="component-coursePresentations-text">{{ $item.courseRoom }}</text>
            <text class="component-coursePresentations-text">{{ $item.courseTeacher }}</text>
          </div>
        </div>
      </div>
    </scroll>
  </div>
</template>

<script>
export default {
  protected: {
    dayNum: ""
  },
  private: {
    title: "全部课程",
    time: "",
    timer: null,
    weeknum: "",

    courseSchedule: []
  },

  onShow() {
    ;(this.time = this.$app.$def.timeUpdate.updateTime().time),
      (this.timer = this.$app.$def.timeUpdate.updateTimePerminute((timeData) => {
        this.time = timeData.time
      }))

    this.courseSchedule = this.$app.$def.courseDataParse.getCourseSchedule(this.dayNum)

    const dayMap = {
      Mon: "周一",
      Tue: "周二",
      Wed: "周三",
      Thu: "周四",
      Fri: "周五",
      Sat: "周六",
      Sun: "周日"
    }
    this.weeknum = dayMap[this.dayNum]
  },

  onDestroy() {
    this.$app.$def.timeUpdate.stopTimer(this.timer) // 清除定时器，防止内存泄漏
  },
  onHide() {
    this.$app.$def.timeUpdate.stopTimer(this.timer) // 清除定时器，防止内存泄漏
  },

  exit() {
    this.$app.$def.router.back()
  }
}
</script>

<style>
@import "../../../../common/css/universal.css";
@import "../../../../common/css/nav.css";

.component-allCourses-list {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  margin-bottom: 30px;
  width: 324px;
  height: 404.4px;

  scroll-snap-align: start;
}

.component-coursePresentations-weekNumText {
  font-size: 18px;
  font-weight: 600;
  letter-spacing: 0px;
  line-height: 23.87px;
  color: rgba(255, 255, 255, 0.6);
  text-align: center;
  vertical-align: top;
}

.component-coursePresentations-border {
  display: flex;
  justify-content: center;
  align-items: center;

  width: 318px;
  height: 185px;
}

.component-coursePresentations-content {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;

  left: 0px;
  top: 0px;
  width: 318px;
  height: 177px;
  opacity: 1;
  border-radius: 36px;
  background-color: rgba(38, 38, 38, 1);
}

.component-coursePresentations-text {
  left: 19px;
  opacity: 1;
  font-size: 20px;
  font-weight: 550;
  letter-spacing: 0px;
  line-height: 26.52px;
  color: rgba(255, 255, 255, 0.6);
  text-align: left;
  vertical-align: top;
}

.component-coursePresentations-courses {
  left: 19px;
  opacity: 1;
  font-size: 32px;
  font-weight: 550;
  letter-spacing: 0px;
  line-height: 42.43px;
  color: rgba(255, 255, 255, 1);
  text-align: left;
  vertical-align: top;
}
</style>
