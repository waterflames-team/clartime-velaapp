<template>
  <div class="page">
    <div class="component-nav">
      <text class="component-nav-title-text" onclick="exit">< {{ title }}</text>
      <text class="component-nav-title-time">{{ time }}</text>
    </div>
    <div class="gap-110"></div>

    <scroll class="component-allCourses-list" scroll-y="true" bounces="true">
      <div class="gap-36"></div>

      <div class="component-coursePresentations-border" for="{{weekDay}}">
        <div
          class="component-coursePresentations-content"
          ontouchstart="selectCard($idx)"
          ontouchend="selectCard(-1)"
          style="background-color: {{ selectedCard === $idx ? 'rgba(13, 110, 255, 1)' : 'rgba(38, 38, 38, 1)' }}"
          onclick="jumpToDay($item.nameEn)"
        >
          <text class="component-coursePresentations-text">{{ $item.nameZh }}</text>
        </div>
      </div>
    </scroll>
  </div>
</template>

<script>
export default {
  private: {
    title: "全部课程",
    time: "",
    timer: null,
    selectedCard: -1,
    weekDay: [
      {nameZh: "周一", nameEn: "Mon"},
      {nameZh: "周二", nameEn: "Tue"},
      {nameZh: "周三", nameEn: "Wed"},
      {nameZh: "周四", nameEn: "Thu"},
      {nameZh: "周五", nameEn: "Fri"},
      {nameZh: "周六", nameEn: "Sat"},
      {nameZh: "周日", nameEn: "Sun"}
    ]
  },

  onShow() {
    ;(this.time = this.$app.$def.timeUpdate.updateTime().time),
      (this.timer = this.$app.$def.timeUpdate.updateTimePerminute((timeData) => {
        this.time = timeData.time
      }))
  },

  selectCard(idx) {
    this.selectedCard = idx
  },

  onDestroy() {
    this.$app.$def.timeUpdate.stopTimer(this.timer) // 清除定时器，防止内存泄漏
  },
  onHide() {
    this.$app.$def.timeUpdate.stopTimer(this.timer) // 清除定时器，防止内存泄漏
  },

  exit() {
    this.$app.$def.router.back()
  },

  jumpToDay(day) {
    this.$app.$def.router.push({
      uri: "pages/other/AllCourses/DayCourses",
      params: {dayNum: day}
    })
  }
}
</script>

<style>
@import "../../../common/css/universal.css";
@import "../../../common/css/nav.css";

/* 指示器 */
/* .component-indicator{
  align-items: center;
  width: 100px;
  height: 10px;
  opacity: 1;
  border-radius: 30px;
  background-color: #262626;
}
.component-indicator-highlight{
  height: 9px;
  opacity: 1;
  border-radius: 30px;
  background-color: #ffffff;
} */

/* 列表展示 */
/* .component-allCourses-show {
  width: 100%;
  height: 404.4px;

  scroll-snap-type: x cross;
  scroll-snap-stop: always;
} */

.component-allCourses-list {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  margin-bottom: 30px;
  width: 324px;
  height: 404.4px;

  scroll-snap-align: start;
}

.component-coursePresentations-border {
  display: flex;
  justify-content: center;
  align-items: center;

  width: 324px;
  height: 98px;
}

.component-coursePresentations-content {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;

  left: 0px;
  top: 0px;
  width: 324px;
  height: 90px;
  opacity: 1;
  border-radius: 36px;
  background-color: rgba(38, 38, 38, 1);
}

.component-coursePresentations-text {
  top: 23px;
  left: 19px;
  opacity: 1;
  font-size: 32px;
  font-weight: 500;
  letter-spacing: 0px;
  line-height: 44.8px;
  color: rgba(255, 255, 255, 1);
  text-align: left;
  vertical-align: top;
}
</style>
