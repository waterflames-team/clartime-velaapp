<template>
  <div class="page">
    <stack>
      <div class="aboutPage" style="opacity:{{backgOpacity}}"></div>
      <scroll
        class="content horizontal-center"
        scroll-y="true"
        bounces="true"
        @scroll="updateHighlightLength"
      >
        <div class="component-about-title">
          <div style="top: 88px; height: 191px" class="screen-center">
            <img src="/common/about_logo.png" class="component-about-titleLogo" />
            <div class="gap-100"></div>
            <text class="component-about-titleText">澄序课程表</text>
            <text class="component-about-titleVersion" onclick="onVersionClick">
              v{{ version }}
            </text>
          </div>
        </div>

        <div class="component-about-textCard vertical-left">
          <text class="component-about-textContent-textSubTitle">参与开发的人员</text>
          <div class="gap-20"></div>
          <text class="component-about-textContent-text">@蠢鱼Yulimfish</text>
          <text class="component-about-textContent-text">@绫凌子Rinko</text>
          <div class="gap-240"></div>
          <text class="component-about-textContent-textS">本应用灵感来源于</text>
          <text class="component-about-textContent-textS">米坛社区「环间课表」,</text>
          <text class="component-about-textContent-textS">感谢他们做出</text>
          <text class="component-about-textContent-textS">如此好用的环上应用</text>
          <div class="gap-120"></div>
          <text class="component-about-textContent-textS">UI设计参考来自@无源流沙，</text>
          <text class="component-about-textContent-textS">感谢(人´v`)</text>
          <div class="gap-120"></div>
          <text class="component-about-textContent-textS">感谢</text>
          <text class="component-about-textContent-textS">@过客是个铁憨憨/@藻钠Zaona</text>
          <text class="component-about-textContent-textS">为本应用UI提出宝贵的修改建议</text>
          <div class="gap-120"></div>
          <text class="component-about-textContent-textS">感谢你愿意来使用</text>
          <text class="component-about-textContent-textS">这个没啥意思的小应用</text>
          <text class="component-about-textContent-textS">愿它可以陪伴你的学习生活～</text>
        </div>
      </scroll>
      <img src="/common/nav-bg.png" style="opacity:{{navOpacity}}" />
      <div class="component-nav-noback">
        <div class="component-nav-backGroup" onclick="exit">
          <img src="/common/back_button.png" class="component-nav-backButton" />
          <text class="component-nav-title-text-backb">{{ title }}</text>
        </div>
        <text class="component-nav-title-time">{{ time }}</text>
      </div>
    </stack>
  </div>
</template>

<script>
export default {
  private: {
    title: "关于",
    time: "",
    version: "0.3.0",
    timer: null,
    eggClickCount: 0,
    backgOpacity: 1,
    navOpacity: 0
  },

  updateHighlightLength(event) {
    const {scrollX, scrollY} = event
    if (scrollY < 270 && scrollY > 0) {
      if (this.navOpacity !== 0) {
        this.navOpacity = 0
      }

      if (scrollY / 270 > 0 && scrollY / 270 <= 0.1) {
        this.backgOpacity = 1
      } else if (scrollY / 270 > 0.1 && scrollY / 270 <= 0.3 && this.backgOpacity !== 0.8) {
        this.backgOpacity = 0.8
      } else if (scrollY / 270 > 0.3 && scrollY / 270 <= 0.5 && this.backgOpacity !== 0.6) {
        this.backgOpacity = 0.6
      } else if (scrollY / 270 > 0.5 && scrollY / 270 <= 0.7 && this.backgOpacity !== 0.5) {
        this.backgOpacity = 0.5
      } else if (scrollY / 270 > 0.7 && scrollY / 270 <= 0.9 && this.backgOpacity !== 0.3) {
        this.backgOpacity = 0.3
      } else if (scrollY / 270 > 0.9 && scrollY / 270 < 1 && this.backgOpacity !== 0.1) {
        this.backgOpacity = 0.1
      }
    } else if (scrollY <= 0 && this.backgOpacity !== 1) {
      if (this.navOpacity !== 0) {
        this.navOpacity = 0
      }

      this.backgOpacity = 1
    } else if (scrollY >= 270 && this.backgOpacity !== 0) {
      if (this.navOpacity !== 1) {
        this.navOpacity = 1
      }

      this.backgOpacity = 0
    }
  },

  onShow() {
    ;(this.time = this.$app.$def.timeUpdate.updateTime().time),
      (this.timer = this.$app.$def.timeUpdate.updateTimePerminute((timeData) => {
        this.time = timeData.time
      }))
  },

  onDestroy() {
    this.$app.$def.timeUpdate.stopTimer(this.timer) // 清除定时器，防止内存泄漏
  },
  onHide() {
    this.$app.$def.timeUpdate.stopTimer(this.timer) // 清除定时器，防止内存泄漏
  },

  exit() {
    this.$app.$def.router.push({
      uri: "pages/index",
      params: {
        ___PARAM_LAUNCH_FLAG___: "clearTask"
      }
    })
  },

  onVersionClick() {
    this.eggClickCount++
    if (this.eggClickCount === 3) {
      this.$app.$def.router.push({
        uri: "pages/other/EGG"
      })
      this.eggClickCount = 0
    }
  },

  onBackPress() {
    this.$app.$def.router.push({
      uri: "pages/index",
      params: {
        ___PARAM_LAUNCH_FLAG___: "clearTask"
      }
    })
    return true
  }
}
</script>

<style>
@import "../../../common/css/universal.css";
@import "../../../common/css/component.css";
.aboutPage {
  /* width: 336px; */
  width: 100%;
  /* height: 480px; */
  height: 100%;
  background-image: url("/common/about_bg.png");
  background-size: cover;
}
.content {
  width: 336px;
  height: 480px;

  display: flex;
  flex-direction: column;

  scroll-snap-type: y cross;
}

/* 头部标题logo */
.component-about-title {
  position: absolute;
  height: 327px;
}
.component-about-titleLogo {
  width: 118px;
  height: 118px;
}
.component-about-titleText {
  font-size: 30px;
  font-weight: 700;
  letter-spacing: 0px;
  line-height: 39.78px;
  color: rgba(255, 255, 255, 1);
  text-align: center;
}
.component-about-titleVersion {
  font-size: 18px;
  font-weight: 400;
  letter-spacing: 0px;
  line-height: 23.87px;
  color: rgba(255, 255, 255, 0.6);
  text-align: center;
}

/* 感谢描述 */
.component-about-textCard {
  top: 327px;
  width: 312px;
  height: 546px;
  opacity: 1;
  border-radius: 30px;
  background-color: rgba(255, 255, 255, 0.1);
  display: flex;
  flex-direction: column;
  padding: 12px;
}
.component-about-textContent-textSubTitle {
  font-size: 32px;
  font-weight: 500;
  letter-spacing: 0px;
  line-height: 44.8px;
  color: rgba(255, 255, 255, 0.6);
  text-align: left;
}
.component-about-textContent-text {
  font-size: 32px;
  font-weight: 500;
  letter-spacing: 0px;
  line-height: 44.8px;
  color: rgba(255, 255, 255, 1);
  text-align: left;
}
.component-about-textContent-textS {
  font-size: 20px;
  font-weight: 500;
  letter-spacing: 0px;
  color: rgba(255, 255, 255, 0.6);
  white-space: pre-line;
  flex-wrap: wrap;
}
</style>
