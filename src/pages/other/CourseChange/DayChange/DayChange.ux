<template>
  <div class="page">
    <div class="component-nav">
      <text class="component-nav-title-text" onclick="exit">< {{ title }}</text>
      <text class="component-nav-title-time">{{ time }}</text>
    </div>
    <div class="gap-110"></div>

    <text class="component-classChange-text" if="{{ page === 1 }}">请选择在本周几调休</text>
    <text class="component-classChange-text" if="{{ page === 2 }}">请选择调为周几的课</text>

    <scroll class="component-classChange-list" scroll-y="true" if="{{ page === 1 || page === 2 }}">
      <div class="gap-36"></div>

      <div class="component-classChange-card-border" for="{{weekDay}}">
        <div
          class="component-classChange-card-content"
          ontouchstart="selectCard($idx)"
          ontouchend="selectCard(-1)"
          onclick="pageTurn($idx)"
          style="background-color: {{ selectedCard === $idx ? 'rgba(13, 110, 255, 1)' : 'rgba(38, 38, 38, 1)' }}"
        >
          <text class="component-classChange-card-text">{{ $item.nameZh }}</text>
        </div>
      </div>
    </scroll>

    <!-- 结束页 -->
    <div class="component-classChange-resultPage" if="{{ page === 3 }}">
      <div class="gap-36"></div>

      <div class="component-classChange-result loading" if="{{changeRseult === -1}}">
        <text class="component-classChange-result-icon">〇</text>
      </div>
      <div class="component-classChange-result success" elif="{{changeRseult === 1}}">
        <text class="component-classChange-result-icon">✓</text>
      </div>
      <div class="component-classChange-result failure" elif="{{changeRseult === 0}}">
        <text class="component-classChange-result-icon">✕</text>
      </div>

      <div class="gap-240"></div>

      <text class="component-classChange-result-text" if="{{changeRseult === -1}}">调整中</text>
      <text class="component-classChange-result-text" elif="{{changeRseult === 1}}">调整完成</text>
      <text class="component-classChange-result-text" elif="{{changeRseult === 0}}">调整失败</text>

      <text class="component-classChange-result-text">{{ changeDate }}</text>
    </div>
  </div>
</template>

<script>
export default {
  private: {
    title: "调休",
    time: "",
    timer: null,
    selectedCard: -1,
    page: 1,
    changeRseult: 0,
    weekDay: [
      {nameZh: "周一", nameEn: "Mon"},
      {nameZh: "周二", nameEn: "Tue"},
      {nameZh: "周三", nameEn: "Wed"},
      {nameZh: "周四", nameEn: "Thu"},
      {nameZh: "周五", nameEn: "Fri"},
      {nameZh: "周六", nameEn: "Sat"},
      {nameZh: "周日", nameEn: "Sun"}
    ],
    changeDate: ["DayChange"]
  },
  onShow() {
    ;(this.time = this.$app.$def.timeUpdate.updateTime().time),
      (this.timer = this.$app.$def.timeUpdate.updateTimePerminute((timeData) => {
        this.time = timeData.time
      }))

    // 获取当前星期几并重新排序weekDay数组
    const today = new Date().getDay() || 7 // 0是周日，转换为7
    this.weekDay = [
      {nameZh: "周一", nameEn: "Mon"},
      {nameZh: "周二", nameEn: "Tue"},
      {nameZh: "周三", nameEn: "Wed"},
      {nameZh: "周四", nameEn: "Thu"},
      {nameZh: "周五", nameEn: "Fri"},
      {nameZh: "周六", nameEn: "Sat"},
      {nameZh: "周日", nameEn: "Sun"}
    ].sort((a, b) => {
      const aDay = a.nameEn === "Sun" ? 7 : parseInt(a.nameEn.slice(-1))
      const bDay = b.nameEn === "Sun" ? 7 : parseInt(b.nameEn.slice(-1))
      return ((aDay - today + 7) % 7) - ((bDay - today + 7) % 7)
    })
  },

  onDestroy() {
    this.$app.$def.timeUpdate.stopTimer(this.timer) // 清除定时器，防止内存泄漏
  },
  onHide() {
    this.$app.$def.timeUpdate.stopTimer(this.timer) // 清除定时器，防止内存泄漏
  },

  updateTime() {
    const now = new Date()
    const hours = String(now.getHours()).padStart(2, "0")
    const minutes = String(now.getMinutes()).padStart(2, "0")
    // const Seconds = String(now.getSeconds()).padStart(2, "0")
    this.title_time = `${hours}:${minutes}`
  },

  exit() {
    // 合并条件判断：如果正在调整中，则无响应；如果在结果页/第一页且不在调整中，则返回上级页面
    if (this.page === 1 || (this.page === 3 && this.changeRseult !== -1)) {
      this.$app.$def.router.back()
    } else if (this.page === 3 && this.changeRseult === -1) {
      return
    } else {
      // 其他情况返回上一步
      this.page -= 1
      this.changeDate.pop()
    }
  },

  selectCard(idx) {
    this.selectedCard = idx
  },

  pageTurn(idx) {
    this.page += 1
    this.changeDate.push(idx)
    this.selectedCard = -1
  }
}
</script>

<style>
@import "../../../../common/css/universal.css";
@import "../../../../common/css/component.css";

.component-classChange-text {
  height: 32px;
  opacity: 1;

  font-size: 24px;
  font-weight: 550;
  letter-spacing: 0px;
  line-height: 31.82px;
  color: rgba(255, 255, 255, 0.6);
  text-align: left;
  vertical-align: top;
}
.component-classChange-list {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;

  margin-bottom: 30px;
  width: 324px;
  height: 386px;

  scroll-snap-align: start;
}

.component-classChange-card-border {
  display: flex;
  justify-content: center;
  align-items: center;

  width: 324px;
  height: 98px;
}

.component-classChange-card-content {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;

  left: 0px;
  top: 0px;
  width: 324px;
  height: 90px;
  opacity: 1;
  border-radius: 24px;
  background-color: rgba(38, 38, 38, 1);
}

.component-classChange-card-text {
  top: 24px;
  left: 19px;
  opacity: 1;
  font-size: 32px;
  font-weight: 550;
  letter-spacing: 0px;
  line-height: 44.8px;
  color: rgba(255, 255, 255, 1);
  text-align: left;
  vertical-align: top;
}

.component-classChange-resultPage {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  width: 324px;
  height: 386px;
}

.component-classChange-result {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  width: 128px;
  height: 128px;
  opacity: 1;
  border-radius: 24px;
}
.loading {
  background-color: rgba(255, 195, 0, 1);
}
.failure {
  background-color: rgba(255, 0, 0, 1);
}
.success {
  background-color: rgba(14, 124, 59, 1);
}

.component-classChange-result-icon {
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 0px;
  line-height: 79.56px;
  color: rgba(255, 255, 255, 1);
  text-align: center;
  vertical-align: middle;
}

.component-classChange-result-text {
  font-size: 32px;
  font-weight: 550;
  letter-spacing: 0px;
  line-height: 44.8px;
  color: rgba(255, 255, 255, 1);
  text-align: center;
  vertical-align: top;
  margin-top: 24px;
  width: 100%;
}
</style>
